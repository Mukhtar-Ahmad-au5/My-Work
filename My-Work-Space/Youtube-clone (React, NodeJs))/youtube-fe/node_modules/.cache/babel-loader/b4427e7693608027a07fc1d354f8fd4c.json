{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Downloads/my codes/daily-assignment/W18D1ass/youtube-fe/src/components/videoplayer.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { relatedVideos, videoData, clearVids, setVidID } from '../actions/actions';\nimport { bindActionCreators } from 'redux';\n\nclass VideoPlayer extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 p-0 mt-4 ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"iframe\", {\n      className: \"col-md-12\",\n      width: \"950\",\n      height: \"525\",\n      title: \"Title\",\n      src: `https://www.youtube.com/embed/${this.props.nowplaying}/?autoplay=1`,\n      allow: \"autoplay;\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chat-replay col mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"SHOW CHAT REPLAY\"), React.createElement(\"div\", {\n      className: \"row autoplayDiv mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Up next\"), React.createElement(\"div\", {\n      className: \"d-flex flex-col autoplay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"autoplayText mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"AUTOPLAY\"), React.createElement(\"label\", {\n      className: \"switch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      defaultChecked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"slider round\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      id: \"Div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.props.videos.map((elem, index) => {\n      return React.createElement(\"div\", {\n        className: \"row col-md-12 p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex flex-col mt-2 mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"col-md-5 p-0\",\n        id: \"vidpImg\",\n        width: \"100%\",\n        src: elem.snippet.thumbnails.high.url,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"thumbTitle ml-2 row text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, elem.snippet.title), React.createElement(\"div\", {\n        className: \"row ml-2 font-weight-bold channelName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, elem.snippet.channelTitle)))));\n    })))));\n  }\n\n  componentDidMount() {\n    this.props.clearVids();\n    this.props.relatedVideos(this.props.nowplaying);\n    this.props.videoData(this.props.nowplaying);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(\"videoplayer state\", state);\n  return {\n    videos: state.video.videos,\n    nowplaying: state.video.nowPlayingID\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    relatedVideos,\n    videoData,\n    clearVids,\n    setVidID\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoPlayer);","map":{"version":3,"sources":["/Users/macbookpro/Downloads/my codes/daily-assignment/W18D1ass/youtube-fe/src/components/videoplayer.js"],"names":["React","Component","connect","relatedVideos","videoData","clearVids","setVidID","bindActionCreators","VideoPlayer","render","props","nowplaying","videos","map","elem","index","snippet","thumbnails","high","url","title","channelTitle","componentDidMount","mapStateToProps","state","console","log","video","nowPlayingID","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { relatedVideos, videoData, clearVids, setVidID } from '../actions/actions';\nimport { bindActionCreators } from 'redux';\n\nclass VideoPlayer extends Component {\n    render() {\n\n\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-md-8 p-0 mt-4 ml-2\">\n                        <iframe className=\"col-md-12\" width=\"950\" height=\"525\" title=\"Title\" src={`https://www.youtube.com/embed/${this.props.nowplaying}/?autoplay=1`} allow='autoplay;'>\n                        </iframe>\n                        <div className=\"text-white\"></div>\n                    </div>\n                    <div className=\"col mt-4\">\n                        <div className=\"chat-replay col mb-3\">\n                            SHOW CHAT REPLAY\n                        </div>\n                        <div className=\"row autoplayDiv mt-4\">\n                            <span className=\"text-white\">Up next</span>\n                            <div className=\"d-flex flex-col autoplay\">\n                                <span className=\"autoplayText mr-2\">AUTOPLAY</span>\n                                <label className=\"switch\">\n                                    <input type=\"checkbox\" defaultChecked={true} />\n                                    <span className=\"slider round\"></span>\n                                </label>\n                            </div>\n                        </div>\n                        <div id=\"Div\">\n                            {this.props.videos.map((elem, index) => {\n                                return <div className=\"row col-md-12 p-0\">\n                                    <div className=\"d-flex flex-col mt-2 mb-2\">\n                                        <img className=\"col-md-5 p-0\" id=\"vidpImg\" width=\"100%\" src={elem.snippet.thumbnails.high.url} alt=\"\" />\n                                        <div>\n                                            <div className=\"thumbTitle ml-2 row text-white\">\n                                                {elem.snippet.title}\n                                            </div>\n                                            <div className=\"row ml-2 font-weight-bold channelName\">\n                                                <small>{elem.snippet.channelTitle}</small>\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                </div>\n                            }\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    componentDidMount() {\n        this.props.clearVids()\n        this.props.relatedVideos(this.props.nowplaying)\n        this.props.videoData(this.props.nowplaying)\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(\"videoplayer state\", state)\n    return {\n        videos: state.video.videos,\n        nowplaying: state.video.nowPlayingID\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ relatedVideos, videoData, clearVids, setVidID }, dispatch)\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoPlayer)"]},"metadata":{},"sourceType":"module"}