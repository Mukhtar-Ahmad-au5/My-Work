{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Downloads/my codes/daily-assignment/W18D1ass/youtube-fe/src/components/videoplayer.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { relatedVideos, videoData, clearVids, setVidID } from '../actions/actions';\nimport { bindActionCreators } from 'redux';\nimport { Link } from 'react-router-dom';\nimport ReactTimeAgo from \"react-time-ago\";\nimport NumericLabel from \"react-pretty-numbers\";\n\nclass VideoPlayer extends Component {\n  render() {\n    let params = {\n      justification: 'L',\n      locales: 'en-AU',\n      currency: false,\n      currencyIndicator: false,\n      percentage: false,\n      precision: 1,\n      commafy: false,\n      shortFormat: true,\n      title: true,\n      cssClass: ['class1', 'class2']\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 p-0 mt-4 ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"iframe\", {\n      className: \"col-md-12\",\n      width: \"950\",\n      height: \"525\",\n      title: \"Title\",\n      src: `https://www.youtube.com/embed/${this.props.nowplaying}/?autoplay=1`,\n      allow: \"autoplay;\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), this.props.videoDATA.map((elem, index) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-white mt-3 ml-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, elem.snippet.title), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-secondary mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(NumericLabel, {\n        className: \"d-inline\",\n        params: {\n          commafy: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, elem.statistics.viewCount), \" views \\u2022\", React.createElement(ReactTimeAgo, {\n        date: elem.snippet.publishedAt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"text-secondary mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Likes\", React.createElement(NumericLabel, {\n        params: params,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, elem.statistics.likeCount)), React.createElement(\"div\", {\n        className: \"text-secondary mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Dislikes\", React.createElement(NumericLabel, {\n        params: params,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, elem.statistics.dislikeCount))));\n    })), React.createElement(\"div\", {\n      className: \"col mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chat-replay col mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"SHOW CHAT REPLAY\"), React.createElement(\"div\", {\n      className: \"row autoplayDiv mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Up next\"), React.createElement(\"div\", {\n      className: \"d-flex flex-col autoplay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"autoplayText mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"AUTOPLAY\"), React.createElement(\"label\", {\n      className: \"switch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      defaultChecked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"slider round\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      id: \"Div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.props.videos.map((elem, index) => {\n      return React.createElement(\"div\", {\n        className: \"row col-md-12 p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Link, {\n        style: {\n          textDecoration: 'none',\n          color: 'white'\n        },\n        to: \"/home/video\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: () => this.props.setVidID(elem.id.videoId),\n        className: \"d-flex flex-col mt-2 mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"col-md-5 p-0\",\n        id: \"vidpImg\",\n        width: \"100%\",\n        src: elem.snippet.thumbnails.high.url,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"thumbTitle ml-2 row text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, elem.snippet.title), React.createElement(\"div\", {\n        className: \"row ml-2 channelName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, elem.snippet.channelTitle))))));\n    })))));\n  }\n\n  componentDidMount() {\n    this.props.clearVids();\n    this.props.relatedVideos(this.props.nowplaying);\n    this.props.videoData(this.props.nowplaying);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(\"videoplayer state\", state);\n  return {\n    videos: state.video.videos,\n    videoDATA: state.video.videoData,\n    nowplaying: state.video.nowPlayingID\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    relatedVideos,\n    videoData,\n    clearVids,\n    setVidID\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoPlayer);","map":{"version":3,"sources":["/Users/macbookpro/Downloads/my codes/daily-assignment/W18D1ass/youtube-fe/src/components/videoplayer.js"],"names":["React","Component","connect","relatedVideos","videoData","clearVids","setVidID","bindActionCreators","Link","ReactTimeAgo","NumericLabel","VideoPlayer","render","params","justification","locales","currency","currencyIndicator","percentage","precision","commafy","shortFormat","title","cssClass","props","nowplaying","videoDATA","map","elem","index","snippet","statistics","viewCount","publishedAt","likeCount","dislikeCount","videos","textDecoration","color","id","videoId","thumbnails","high","url","channelTitle","componentDidMount","mapStateToProps","state","console","log","video","nowPlayingID","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { relatedVideos, videoData, clearVids, setVidID } from '../actions/actions';\nimport { bindActionCreators } from 'redux';\nimport { Link } from 'react-router-dom';\nimport ReactTimeAgo from \"react-time-ago\";\nimport NumericLabel from \"react-pretty-numbers\"\n\n\nclass VideoPlayer extends Component {\n\n\n    render() {\n\n        let params = {\n            justification: 'L',\n            locales: 'en-AU',\n            currency: false,\n            currencyIndicator: false,\n            percentage: false,\n            precision: 1,\n            commafy: false,\n            shortFormat: true,\n            title: true,\n            cssClass: ['class1', 'class2']\n        };\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-md-8 p-0 mt-4 ml-2\">\n                        <iframe className=\"col-md-12\" width=\"950\" height=\"525\" title=\"Title\" src={`https://www.youtube.com/embed/${this.props.nowplaying}/?autoplay=1`} allow='autoplay;'>\n                        </iframe>\n                        {this.props.videoDATA.map((elem, index) => {\n                            return <div>\n                                <div className=\"text-white mt-3 ml-3\">{elem.snippet.title}</div>\n                                <div className=\"row\">\n                                    <div className=\"text-secondary mt-3\"><NumericLabel className=\"d-inline\" params={{commafy:true}}>{elem.statistics.viewCount}</NumericLabel> views &#8226;<ReactTimeAgo date={elem.snippet.publishedAt} /></div>\n                                    <div className=\"text-secondary mt-3\">Likes<NumericLabel params={params}>{elem.statistics.likeCount}</NumericLabel></div>\n                                    <div className=\"text-secondary mt-3\">Dislikes<NumericLabel params={params}>{elem.statistics.dislikeCount}</NumericLabel></div>\n                                </div>\n                            </div>\n                        })}\n\n                    </div>\n                    <div className=\"col mt-4\">\n                        <div className=\"chat-replay col mb-3\">\n                            SHOW CHAT REPLAY\n                        </div>\n                        <div className=\"row autoplayDiv mt-4\">\n                            <span className=\"text-white\">Up next</span>\n                            <div className=\"d-flex flex-col autoplay\">\n                                <span className=\"autoplayText mr-2\">AUTOPLAY</span>\n                                <label className=\"switch\">\n                                    <input type=\"checkbox\" defaultChecked={true} />\n                                    <span className=\"slider round\"></span>\n                                </label>\n                            </div>\n                        </div>\n                        <div id=\"Div\">\n                            {this.props.videos.map((elem, index) => {\n                                return <div className=\"row col-md-12 p-0\">\n                                    <Link style={{ textDecoration: 'none', color: 'white' }} to=\"/home/video\"><div onClick={() => this.props.setVidID(elem.id.videoId)} className=\"d-flex flex-col mt-2 mb-2\">\n                                        <img className=\"col-md-5 p-0\" id=\"vidpImg\" width=\"100%\" src={elem.snippet.thumbnails.high.url} alt=\"\" />\n                                        <div>\n                                            <div className=\"thumbTitle ml-2 row text-white\">\n                                                {elem.snippet.title}\n                                            </div>\n                                            <div className=\"row ml-2 channelName\">\n                                                <small className=\"font-weight-bold\">{elem.snippet.channelTitle}</small>\n                                            </div>\n                                        </div>\n                                    </div></Link>\n                                </div>\n                            }\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    componentDidMount() {\n        this.props.clearVids()\n        this.props.relatedVideos(this.props.nowplaying)\n        this.props.videoData(this.props.nowplaying)\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(\"videoplayer state\", state)\n    return {\n        videos: state.video.videos,\n        videoDATA: state.video.videoData,\n        nowplaying: state.video.nowPlayingID\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ relatedVideos, videoData, clearVids, setVidID }, dispatch)\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoPlayer)"]},"metadata":{},"sourceType":"module"}