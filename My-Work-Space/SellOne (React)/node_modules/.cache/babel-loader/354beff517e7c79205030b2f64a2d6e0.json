{"ast":null,"code":"import { combineReducers } from \"redux\";\nlet initialState = {\n  ProductList: []\n};\n\nfunction appReducer(state = initialState, action) {\n  let stateCopy = JSON.parse(JSON.stringify(state));\n\n  switch (action.type) {\n    case \"addProduct\":\n      return addToList(stateCopy, action.payload);\n\n    default:\n      return stateCopy;\n  }\n}\n\nconst rootReducers = combineReducers({\n  appReducer\n});\nexport default rootReducers;\n\nlet addToList = (state, data) => {\n  let newProductList = state.ProductList.slice();\n  newProductList.push(data);\n  state.ProductList = newProductList;\n  return state;\n};","map":{"version":3,"sources":["/Users/macbookpro/Downloads/my codes/practice/mothlyTest/retest1/retest/src/redux/stateReducer.js"],"names":["combineReducers","initialState","ProductList","appReducer","state","action","stateCopy","JSON","parse","stringify","type","addToList","payload","rootReducers","data","newProductList","slice","push"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE;AADI,CAAnB;;AAIA,SAASC,UAAT,CAAoBC,KAAK,GAAGH,YAA5B,EAA0CI,MAA1C,EAAkD;AAChD,MAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeL,KAAf,CAAX,CAAhB;;AACA,UAAQC,MAAM,CAACK,IAAf;AACE,SAAK,YAAL;AACE,aAAOC,SAAS,CAACL,SAAD,EAAYD,MAAM,CAACO,OAAnB,CAAhB;;AACE;AACF,aAAON,SAAP;AAJJ;AAMD;;AAED,MAAMO,YAAY,GAAGb,eAAe,CAAC;AACnCG,EAAAA;AADmC,CAAD,CAApC;AAIA,eAAeU,YAAf;;AAEA,IAAIF,SAAS,GAAG,CAACP,KAAD,EAAQU,IAAR,KAAgB;AAC9B,MAAIC,cAAc,GAAGX,KAAK,CAACF,WAAN,CAAkBc,KAAlB,EAArB;AACAD,EAAAA,cAAc,CAACE,IAAf,CAAoBH,IAApB;AACAV,EAAAA,KAAK,CAACF,WAAN,GAAoBa,cAApB;AACA,SAAOX,KAAP;AACD,CALD","sourcesContent":["import { combineReducers } from \"redux\";\n\nlet initialState = {\n  ProductList: []\n}\n\nfunction appReducer(state = initialState, action) {\n  let stateCopy = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case \"addProduct\":\n      return addToList(stateCopy, action.payload)\n        default:\n      return stateCopy\n  }\n}\n\nconst rootReducers = combineReducers({\n  appReducer\n})\n\nexport default rootReducers;\n\nlet addToList = (state, data)=> {\n  let newProductList = state.ProductList.slice()\n  newProductList.push(data)\n  state.ProductList = newProductList;\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}