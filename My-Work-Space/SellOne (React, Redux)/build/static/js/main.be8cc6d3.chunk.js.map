{"version":3,"sources":["actions/action.js","components/AddProduct.js","components/ProductList.js","App.js","redux/stateReducer.js","index.js"],"names":["addProduct","data","type","payload","AddProduct","state","ProductName","Category","Condition","Bargain","Price","City","isValidated","addData","shopData","props","isNameValid","e","valid","Boolean","target","value","setState","isPriceValid","handleOnSubmit","preventDefault","console","log","this","className","onSubmit","required","placeholder","onChange","event","for","id","elem","checked","disabled","Component","connect","dispatch","bindActionCreators","ProductList","ProductFilter","filter","Product","parseInt","length","map","index","appReducer","App","aria-hidden","initialState","rootReducers","combineReducers","action","stateCopy","JSON","parse","stringify","addToList","newProductList","slice","push","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be8cc6d3.chunk.js","sourcesContent":["export function addProduct(data){\n    return{\n        type:\"addProduct\",\n        payload: data\n    }\n}","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { addProduct } from '../actions/action';\nimport { bindActionCreators } from 'redux';\n\nclass AddProduct extends Component {\n  state = {\n    ProductName: \"\",\n    Category: \"Mobiles\",\n    Condition: \"Mint\",\n    Bargain: false,\n    Price: \"\",\n    City: \"Bengaluru\",\n    isValidated: false\n  }\n\n\n  addData = () => {\n    let shopData = {\n      \"data\": {\n        \"ProductName\": this.state.ProductName,\n        \"Category\": this.state.Category,\n        \"Condition\": this.state.Condition,\n        \"Bargain\": this.state.Bargain,\n        \"Price\": this.state.Price,\n        \"City\": this.state.City,\n      }\n    }\n    this.props.addProduct(shopData)\n  }\n\n  isNameValid = (e) => {\n    let valid = Boolean(e.target.value && this.state.Price)\n    this.setState({\n      isValidated: valid,\n      ProductName: e.target.value\n    })\n  }\n  isPriceValid = (e) => {\n    let valid = Boolean(e.target.value && this.state.ProductName)\n    this.setState({\n      isValidated: valid,\n      Price: e.target.value\n    })\n  }\n\n\n  handleOnSubmit = (e) => {\n    e.preventDefault()\n    this.addData()\n    this.setState({\n      ProductName: \"\",\n      Category: \"Mobiles\",\n      Condition: \"Mint\",\n      Bargain: false,\n      Price: \"\",\n      City: \"Bengaluru\",\n      isValidated: false\n    })\n  }\n  render() {\n    console.log(\"local state\", this.state)\n    return (\n      <div>\n        <br /><br />\n        <div className=\"container shadow bg-white\">\n          <h4 className=\"font-weight-lighter pt-3 text-center\">Add Product To List</h4><hr className=\"w-75\" />\n          <div className=\"addCon\">\n            {\n              <form onSubmit={this.handleOnSubmit}>\n                <div className=\"addCon text-center\">\n                  <div className=\"addChildCon col-md-2\">\n                    <strong>Product</strong>\n                    <input required type=\"text\" value={this.state.ProductName} className=\"form-control\" placeholder=\"Product Name\" onChange={(event) => this.isNameValid(event)} />\n                  </div>\n                  <div className=\"addChildCon\" for=\"exampleFormControlSelect1\">\n                    <strong>Category</strong>\n                    <select required value={this.state.Category} className=\"form-control\" id=\"exampleFormControlSelect1\" onChange={(elem) => this.setState({ Category: elem.target.value })}>\n                      <option value=\"Mobiles\">Mobiles</option>\n                      <option value=\"Laptops\">Laptops</option>\n                      <option value=\"Desktops\">Desktops</option>\n                      <option value=\"Furniture\">Furniture</option>\n                      <option value=\"Cutlery\">Cutlery</option>\n                      <option value=\"Automobiles\">Automobiles</option>\n                      <option value=\"Books\">Books</option>\n                      <option value=\"Clothes\">Clothes</option>\n                    </select>\n                  </div>\n                  <div className=\"addChildCon\" for=\"exampleFormControlSelect1\">\n                    <strong>Condition</strong>\n                    <select required value={this.state.Condition} className=\"form-control\" id=\"exampleFormControlSelect1\" onChange={(elem) => this.setState({ Condition: elem.target.value })}>\n                      <option value=\"Mint\">Mint</option>\n                      <option value=\"Very Good\">Very Good</option>\n                      <option value=\"Good\">Good</option>\n                      <option value=\"Decent\">Decent</option>\n                      <option value=\"Poor\">Poor</option>\n                      <option value=\"Very Poor\">Very Poor</option>\n                    </select>\n                  </div>\n                  <div className=\"addChildCon\">\n                    <strong>Price</strong>\n                    <input required type=\"number\" value={this.state.Price} className=\"form-control\" placeholder=\"Price\" onChange={(event) => this.isPriceValid(event)} />\n                  </div>\n                  <div className=\"addChildCon\">\n                    <strong>Bargain</strong>\n                    <div>\n                      <label className=\"switch\">\n                        <input type=\"checkbox\" checked={this.state.Bargain} onChange={() => this.setState({ Bargain: !this.state.Bargain })} />\n                        <span className=\"slider round\"></span>\n                      </label>\n                    </div>\n                  </div>\n                  <div className=\"addChildCon col-md-2\" for=\"exampleFormControlSelect1\">\n                    <strong>City</strong>\n                    <select required value={this.state.City} className=\"form-control\" id=\"exampleFormControlSelect1\" onChange={(elem) => this.setState({ City: elem.target.value })}>\n                      <option value=\"Bengaluru\">Bengaluru</option>\n                      <option value=\"Mumbai\">Mumbai</option>\n                      <option value=\"Chennai\">Chennai</option>\n                      <option value=\"Kolkata\">Kolkata</option>\n                      <option value=\"Vadodara\">Vadodara</option>\n                      <option value=\"Agra\">Agra</option>\n                      <option value=\"Delhi\">Delhi</option>\n                      <option value=\"Patna\">Patna</option>\n                    </select>\n                  </div>\n                  <div className=\"addChildCon\">\n                    <br/>\n                    <button disabled={!this.state.isValidated} className=\"form-control btn btn-danger\">Add</button>\n                  </div>\n                </div>\n              </form>\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(\"current state\", state)\n  return {\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ addProduct }, dispatch)\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProduct)\n\n\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nclass ProductList extends Component {\n\n    state = {\n        City: \"Bengaluru\",\n        Category: \"Mobiles\",\n        Price: \"\"\n    }\n\n    ProductFilter = (ProductList) => {\n        ProductList = ProductList.filter(Product => {\n            if (this.state.City === Product.data.City && this.state.Category === Product.data.Category && \n                (this.state.Price === \"\" || parseInt(this.state.Price) >= parseInt(Product.data.Price)))\n                return true\n        })\n        return ProductList;\n    }\n\n    render() {\n        return (\n            <div className=\"container shadow bg-white\">\n                <h4 className=\"font-weight-lighter pt-3 text-center\">Product List</h4><hr className=\"w-75\"/>\n                <div className=\"addCon text-center\">\n                    <div className=\"addChildCon col-md-3\" for=\"exampleFormControlSelect1\">\n                       <strong>City</strong> \n                    <select required className=\"form-control\" id=\"exampleFormControlSelect1\" onChange={(elem) => this.setState({ City: elem.target.value })}>\n                        <option value=\"Bengaluru\">Bengaluru</option>\n                        <option value=\"Mumbai\">Mumbai</option>\n                        <option value=\"Chennai\">Chennai</option>\n                        <option value=\"Kolkata\">Kolkata</option>\n                        <option value=\"Vadodara\">Vadodara</option>\n                        <option value=\"Agra\">Agra</option>\n                        <option value=\"Delhi\">Delhi</option>\n                        <option value=\"Patna\">Patna</option>\n                    </select>\n                    </div>\n                    <div className=\"addChildCon col-md-3\" for=\"exampleFormControlSelect1\">\n                       <strong>Category</strong>\n                    <select required className=\"form-control\" id=\"exampleFormControlSelect1\" onChange={(elem) => this.setState({ Category: elem.target.value })}>\n                        <option value=\"Mobiles\">Mobiles</option>\n                        <option value=\"Laptops\">Laptops</option>\n                        <option value=\"Desktops\">Desktops</option>\n                        <option value=\"Furniture\">Furniture</option>\n                        <option value=\"Cutlery\">Cutlery</option>\n                        <option value=\"Automobiles\">Automobiles</option>\n                        <option value=\"Books\">Books</option>\n                        <option value=\"Clothes\">Clothes</option>\n                    </select>\n                    </div>\n                    <div className=\"addChildCon col-md-3\" for=\"exampleFormControlSelect1\">\n                       <strong>Price</strong>\n                    <input type=\"number\" className=\"form-control\" placeholder=\"Price\" onChange={(elem) => this.setState({ Price: elem.target.value })} />\n                    </div>\n                </div>\n                <div className=\"container\">\n                    <div>\n                        {!(this.ProductFilter(this.props.ProductList).length === 0) && \n                            <table className=\"table\">\n                            <thead className=\"bg-dark text-white text-center\">\n                                <th>Product Name</th>\n                                <th>Product Category</th>\n                                <th>Product Price</th>\n                                <th>Product Condition</th>\n                            </thead>\n                            <tbody>\n                                {this.ProductFilter(this.props.ProductList).map((elem, index) => {\n                                if(elem.data.Bargain === true) {\n                                return <tr className=\"alert alert-success text-center\">\n                                    <td>{elem.data.ProductName}</td>\n                                    <td>{elem.data.Category}</td>\n                                    <td>{elem.data.Price}</td>\n                                    <td>{elem.data.Condition}</td>\n                                </tr>\n                                }\n                                else {\n                                    return <tr className=\"alert alert-info text-center\">\n                                    <td>{elem.data.ProductName}</td>\n                                    <td>{elem.data.Category}</td>\n                                    <td>{elem.data.Price}</td>\n                                    <td>{elem.data.Condition}</td>\n                                </tr>\n                                }\n                            })}\n                            </tbody>\n                        </table>}\n                            {this.ProductFilter(this.props.ProductList).length === 0 && \n                                <h3 className=\"text-center text-danger bg-light py-3\">No Products Found</h3>\n                            }\n                    </div>\n                </div>\n                <br/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(\"current state\", state)\n    return {\n        ProductList: state.appReducer.ProductList\n    }\n}\n\n\nexport default connect(mapStateToProps)(ProductList)","import React, { Component } from 'react';\nimport './App.css';\nimport AddProduct from './components/AddProduct';\nimport ProductList from './components/ProductList';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"body\">\n          <nav className=\"navbar\">\n          <h5 className=\"logo mt-1\"><i className=\"fa fa-handshake-o mr-2\" aria-hidden=\"true\"></i>\n              <span>SellOne App</span></h5>\n          </nav>\n          <AddProduct />\n          <br/>\n          <ProductList />\n      </div>\n        )\n      }\n    \n    }\n    \n    export default App;\n","import { combineReducers } from \"redux\";\n\nlet initialState = {\n  ProductList: []\n}\n\nfunction appReducer(state = initialState, action) {\n  let stateCopy = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case \"addProduct\":\n      return addToList(stateCopy, action.payload)\n        default:\n      return stateCopy\n  }\n}\n\nconst rootReducers = combineReducers({\n  appReducer\n})\n\nexport default rootReducers;\n\nlet addToList = (state, data)=> {\n  let newProductList = state.ProductList.slice()\n  newProductList.push(data)\n  state.ProductList = newProductList;\n  return state;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App from './App';\nimport rootReducers from './redux/stateReducer';\n\nlet store = createStore(rootReducers)\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}